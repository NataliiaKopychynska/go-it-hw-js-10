{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.notification-form'); // Заміна кнопки на форму\nconst enterDelay = document.querySelector('input[name=\"delay\"]');\nconst fiedestOptions = document.querySelector('.fiedest-radio');\n\nlet fulfilledBtn = false;\nlet rejectedBtn = false;\n\nform.addEventListener('submit', handleCreateMessage); // Зміна обробника події з кнопки на форму\nfiedestOptions.addEventListener('change', changeOptions);\n\nfunction changeOptions(event) {\n  if (event.target.value === 'fulfilled') {\n    fulfilledBtn = true;\n    rejectedBtn = false;\n  } else if (event.target.value === 'rejected') {\n    rejectedBtn = true;\n    fulfilledBtn = false;\n  }\n}\n\nfunction handleCreateMessage(evt) {\n  evt.preventDefault();\n\n  const delay = parseInt(enterDelay.value) || 0;\n\n  // Створення промісу\n  const notificationPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (fulfilledBtn) {\n        resolve(delay); // Відправляємо саме значення затримки\n      } else if (rejectedBtn) {\n        reject(delay); // Відправляємо значення затримки при відхиленні\n      }\n    }, delay);\n  });\n\n  // Обробка промісу\n  notificationPromise\n    .then(delay => {\n      iziToast.success({\n        timeout: 5000,\n        position: 'topRight',\n        title: 'Success',\n        titleColor: '#fff',\n        titleSize: '16px',\n        message: `Fulfilled promise in ${delay} ms`,\n        messageColor: '#fff',\n        backgroundColor: '#59a10d',\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        timeout: 5000,\n        position: 'topRight',\n        title: 'Error',\n        titleColor: '#fff',\n        titleSize: '16px',\n        message: `Rejected promise in ${delay} ms`,\n        messageColor: '#fff',\n        backgroundColor: '#ef4040',\n      });\n    })\n    .finally(() => {\n      enterDelay.value = ''; // Очищення поля введення\n    });\n}\n\n// Додатковий запит POST\nconst postToAdd = {\n  title: 'CRUD',\n  body: 'CRUD is awesome!',\n};\n\nconst options = {\n  method: 'POST',\n  body: JSON.stringify(postToAdd),\n  headers: {\n    'Content-Type': 'application/json; charset=UTF-8',\n  },\n};\n\nfetch('https://jsonplaceholder.typicode.com/posts', options)\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  })\n  .then(post => console.log(post))\n  .catch(error => console.log(error));\n"],"names":["form","enterDelay","fiedestOptions","fulfilledBtn","rejectedBtn","handleCreateMessage","changeOptions","event","evt","delay","resolve","reject","iziToast","postToAdd","options","response","post","error"],"mappings":"wIAGA,MAAMA,EAAO,SAAS,cAAc,oBAAoB,EAClDC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAe,GACfC,EAAc,GAElBJ,EAAK,iBAAiB,SAAUK,CAAmB,EACnDH,EAAe,iBAAiB,SAAUI,CAAa,EAEvD,SAASA,EAAcC,EAAO,CACxBA,EAAM,OAAO,QAAU,aACzBJ,EAAe,GACfC,EAAc,IACLG,EAAM,OAAO,QAAU,aAChCH,EAAc,GACdD,EAAe,GAEnB,CAEA,SAASE,EAAoBG,EAAK,CAChCA,EAAI,eAAc,EAElB,MAAMC,EAAQ,SAASR,EAAW,KAAK,GAAK,EAGhB,IAAI,QAAQ,CAACS,EAASC,IAAW,CAC3D,WAAW,IAAM,CACXR,EACFO,EAAQD,CAAK,EACJL,GACTO,EAAOF,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAIE,KAAKA,GAAS,CACbG,EAAS,QAAQ,CACf,QAAS,IACT,SAAU,WACV,MAAO,UACP,WAAY,OACZ,UAAW,OACX,QAAS,wBAAwBH,CAAK,MACtC,aAAc,OACd,gBAAiB,SACzB,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdG,EAAS,MAAM,CACb,QAAS,IACT,SAAU,WACV,MAAO,QACP,WAAY,OACZ,UAAW,OACX,QAAS,uBAAuBH,CAAK,MACrC,aAAc,OACd,gBAAiB,SACzB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbR,EAAW,MAAQ,EACzB,CAAK,CACL,CAGA,MAAMY,EAAY,CAChB,MAAO,OACP,KAAM,kBACR,EAEMC,EAAU,CACd,OAAQ,OACR,KAAM,KAAK,UAAUD,CAAS,EAC9B,QAAS,CACP,eAAgB,iCACjB,CACH,EAEA,MAAM,6CAA8CC,CAAO,EACxD,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,EACA,KAAKC,GAAQ,QAAQ,IAAIA,CAAI,CAAC,EAC9B,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC"}