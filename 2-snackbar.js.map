{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst enterDelay = document.querySelector('input[name=\"delay\"]');\nconst btnCreateNotification = document.querySelector('.btn-snackbar');\nconst fiedestOptions = document.querySelector('.fiedest-radio');\n\nlet fulfilledBtn = false;\nlet rejectedBtn = false;\n\nbtnCreateNotification.addEventListener('click', handleCreateMessage);\nfiedestOptions.addEventListener('change', changeOptions);\n\nfunction changeOptions(event) {\n  if (event.target.value === 'fulfilled') {\n    fulfilledBtn = true;\n    rejectedBtn = false;\n  } else if (event.target.value === 'rejected') {\n    rejectedBtn = true;\n    fulfilledBtn = false;\n  }\n}\n\nfunction handleCreateMessage(evt) {\n  evt.preventDefault();\n\n  const delay = parseInt(enterDelay.value) || 0;\n\n  // Створення промісу з виконанням або відхиленням залежно від обраного значення\n  const notificationPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (fulfilledBtn) {\n        resolve(`Fulfilled promise in ${delay} ms`);\n      } else if (rejectedBtn) {\n        reject(new Error('Rejected promise due to invalid operation'));\n      }\n    }, delay);\n  });\n\n  // Обробка успішного виконання або відхилення промісу\n  notificationPromise\n    .then(message => {\n      iziToast.success({\n        timeout: 5000,\n        position: 'topRight',\n        title: 'Success',\n        titleColor: '#fff',\n        titleSize: '16px',\n        message: message,\n        messageColor: '#fff',\n        backgroundColor: '#59a10d',\n      });\n    })\n    .catch(error => {\n      iziToast.error({\n        timeout: 5000,\n        position: 'topRight',\n        title: 'Error',\n        titleColor: '#fff',\n        titleSize: '16px',\n        message: error.message,\n        messageColor: '#fff',\n        backgroundColor: '#ef4040',\n      });\n    })\n    .finally(() => {\n      enterDelay.value = ''; // Очищення поля введення після виконання або відхилення\n    });\n}\n"],"names":["enterDelay","btnCreateNotification","fiedestOptions","fulfilledBtn","rejectedBtn","handleCreateMessage","changeOptions","event","evt","delay","resolve","reject","message","iziToast","error"],"mappings":"wIAGA,MAAMA,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAwB,SAAS,cAAc,eAAe,EAC9DC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAe,GACfC,EAAc,GAElBH,EAAsB,iBAAiB,QAASI,CAAmB,EACnEH,EAAe,iBAAiB,SAAUI,CAAa,EAEvD,SAASA,EAAcC,EAAO,CACxBA,EAAM,OAAO,QAAU,aACzBJ,EAAe,GACfC,EAAc,IACLG,EAAM,OAAO,QAAU,aAChCH,EAAc,GACdD,EAAe,GAEnB,CAEA,SAASE,EAAoBG,EAAK,CAChCA,EAAI,eAAc,EAElB,MAAMC,EAAQ,SAAST,EAAW,KAAK,GAAK,EAGhB,IAAI,QAAQ,CAACU,EAASC,IAAW,CAC3D,WAAW,IAAM,CACXR,EACFO,EAAQ,wBAAwBD,CAAK,KAAK,EACjCL,GACTO,EAAO,IAAI,MAAM,2CAA2C,CAAC,CAEhE,EAAEF,CAAK,CACZ,CAAG,EAIE,KAAKG,GAAW,CACfC,EAAS,QAAQ,CACf,QAAS,IACT,SAAU,WACV,MAAO,UACP,WAAY,OACZ,UAAW,OACX,QAASD,EACT,aAAc,OACd,gBAAiB,SACzB,CAAO,CACP,CAAK,EACA,MAAME,GAAS,CACdD,EAAS,MAAM,CACb,QAAS,IACT,SAAU,WACV,MAAO,QACP,WAAY,OACZ,UAAW,OACX,QAASC,EAAM,QACf,aAAc,OACd,gBAAiB,SACzB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbd,EAAW,MAAQ,EACzB,CAAK,CACL"}